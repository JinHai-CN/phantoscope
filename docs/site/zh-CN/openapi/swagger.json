swagger: '2.0'
info:
  description: Following are Phantoscope open APIs.
  version: 1.0.0
  title: Omnisearch Open Api
  contact:
    email: boyan.wang@zilliz.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: petstore.swagger.io
# basePath: /v1
tags:
- name: application
  description: The application defines the data structure and pipeline
- name: pipeline
  description: The pipeline describes how to organize processor
- name: operator
  description: The operator is the minimal work unit
# schemes:
# - http
paths:
  /application:
    get:
      tags:
      - application
      summary: view application list
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
        400:
          description: Invalid status value
  /application/{applicationName}:
    get:
      tags:
      - application
      summary: get application detail
      produces:
      - application/json
      parameters:
      - name: applicationName
        in: path
        description: none
        type: string
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Application'
    post:
      tags:
      - application
      summary: create application
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: applicationName
        description: none
        type: string
        required: true
      - in: body
        name: fields
        description: none
        schema:
          $ref: '#/definitions/Application'
      responses:
        201:
          description: successfully created
          schema:
            $ref: '#/definitions/Application'
    delete:
      tags:
      - application
      summary: delete application
      produces:
      - application/json
      parameters:
      - in: path
        name: applicationName
        description: none
        type: string
        required: true
      responses:
        200:
          description: successful delete
  /application/{applicationName}/search:
    post:
      tags:
      - application
      summary: search by application
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: applicationName
        description: none
        type: string
        required: true
      - in: body
        name: fields
        description: none
        schema:s
          $ref: '#/definitions/Fields'
      responses:
        200:
          description: successful
  /application/{applicationName}/upload:
    post:
      tags:
      - application
      summary: search by application
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: applicationName
        description: none
        type: string
        required: true
      - in: body
        name: fields
        description: nones
        schema:
          $ref: '#/definitions/Fields'
      responses:
        200:
          description: successful
  /application/{applicationName}/entity:
    get:
      tags:
      - application
      summary: search by application
      produces:
      - application/json
      parameters:
      - in: path
        name: applicationName
        description: none
        type: string
        required: true
      responses:
        200:
          description: successful
  /application/{applicationName}/entity/{entityName}:
    delete:
      tags:
      - application
      summary: search by application
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: applicationName
        description: none
        type: string
        required: true
      - in: path
        name: entityName
        description: none
        type: string
        required: trues
      responses:
        200:
          description: successful
  /pipeline:
    get:
      tags:
      - pipeline
      summary: get all pipeline
      produces:
      - application/json
      description: none
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Pipeline'
  /pipeline/{pipelineName}:
    get:
      tags:
      - pipeline
      summary: get pipeline detail
      produces:
      - application/json
      parameters:
      - in: path
        name: pipelineName
        description: none
        required: true
        type: string
      description: none
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Pipeline'
    post:
      tags:
      - pipeline
      summary: create a pipeline
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: pipelineName
        description: none
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Pipeline'
      description: none
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Pipeline'
    delete:
      tags:
      - pipeline
      summary: delete a pipeline
      produces:
      - application/json
      parameters:
      - in: path
        name: pipelineName
        description: none
        required: true
        type: string
      description: none
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Pipeline'
  /operator:
    get:
      tags:
      - operator
      summary: operator list
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Operator'
  /operator/regist:
    post:
      tags:
      - operator
      summary: regist a operator
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/OperatorPost'
      responses:
        200:r
          description: OK
          schema:
            $ref: '#/definitions/Operator'
  /operator/{operatorName}:
    get:
      tags:
      - operator
      summary: get operator detail
      produces:
      - application/json
      parameters:
      - name: operatorName
        in: path
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Operator'
    delete:
      tags:
      - operator
      summary: delete a operator
      produces:
      - application/json
      parameters:
      - name: operatorName
        in: path
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Operator'
definitions:
  Application:
    type: object
    properties:
      fields:
        $ref: '#/definitions/Fields'
      s3Buckets:
        type: string
  Fields:
    type: object
    properties:
      type:
        type: string
        enum:
        - string
        - integer
        - object
      value:
        type: string
        enum:
        - integer
        - string
        - pipeline_name
  Pipeline:
    type: object
    properties:
      name:
        type: string
      input:
        type: string
      description:
        type: string
      processors:
        type: array
        items:
          type: string
      encoder:
        type: string
      indexFileSize:
        type: integer
  Operator:
    type: object
    properties:
      name:
        type: string
      backend:
        type: string
      type:
        type: string
      input:
        type: string
      output:
        type: string
      endpoint:
        type: string
      metric_type:
        type: string
      dimension:
        type: integer
  OperatorPost:
    type: object
    properties:
      name:
        type: string
      endpoint:
        type: string
host: virtserver.swaggerhub.com
basePath: /ReigenAraka/Omnisearch/1.0.0
schemes:
 - http
